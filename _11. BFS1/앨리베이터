import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class 엘리베이터 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int a = Integer.parseInt(st.nextToken());
		int b = Integer.parseInt(st.nextToken());
		int u = Integer.parseInt(st.nextToken());
		int d = Integer.parseInt(st.nextToken());
		
		int bu [] = {u,-d};
		int [] stair = new int[n+1];
		int [] dist = new int[n+1];
		boolean [] visit = new boolean[n+1];
		Arrays.fill(dist, 0);
		Queue<Integer> queue = new LinkedList();
		queue.offer(a);
		visit[a] = true;
		while(!queue.isEmpty()) {
			int x = queue.poll();
			for(int i = 0;i<2;i++) {
				int new_x= x+bu[i];
				if(new_x<1 || new_x>n) continue;
				if(!visit[new_x]) {
					queue.offer(new_x);
					dist[new_x] = dist[x]+1;
					visit[new_x] = true;
				}
			}
			
		}
		if(a==b) {
			System.out.println(0);
		}
		else if(dist[b]==0) {
			System.out.println("use the stairs");
		}
		else {
			System.out.println(dist[b]);
		}
		
	}

}
