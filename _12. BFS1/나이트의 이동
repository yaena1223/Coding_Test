import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class 나이트의이동 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		int move_x[] = {2,2,-2,-2,1,1,-1,-1};
		int move_y[] = {1,-1,1,-1,2,-2,2,-2};
		int n = Integer.parseInt(br.readLine()); //테스트 케이스의 개수
		Queue<Integer[]> queue = new LinkedList();
		boolean [][] visit;
		int [][] dist;
		
		for(int i = 0;i<n;i++) {
			int l = Integer.parseInt(br.readLine()); //체스판 한 변의 길이
			st = new StringTokenizer(br.readLine());
			int from_x = Integer.parseInt(st.nextToken()); //나이트가 현재 있는 칸- x좌표
			int from_y = Integer.parseInt(st.nextToken()); // y좌표
			st = new StringTokenizer(br.readLine());
			int to_x = Integer.parseInt(st.nextToken()); // 나이트가 이동하려고 하는 칸
			int to_y = Integer.parseInt(st.nextToken()); //y좌표
			visit = new boolean[l][l];
			dist= new int[l][l];
			for(int z = 0;z<l;z++) {
				Arrays.fill(dist[z], 0);
			}

			
	
			queue.offer(new Integer[] {from_x,from_y});
			visit[from_x][from_y] = true;
			while(!queue.isEmpty()) {
				Integer[] p = queue.poll();
				int p_x =p[0];
				int p_y =p[1];
				for(int a = 0;a<8;a++) {
					
						int new_x = p_x + move_x[a];
						int new_y = p_y + move_y[a];
						if(new_x<0 || new_y<0 || new_x>=l || new_y>=l) continue;
						if(!visit[new_x][new_y]) {
							dist[new_x][new_y] = dist[p_x][p_y]+1;
							visit[new_x][new_y] = true;
							queue.offer(new Integer[] {new_x,new_y});
						}
					
				}
			}
			sb.append(dist[to_x][to_y]+"\n");
		
		
		}
		
	System.out.println(sb.toString());
		
	
	}

}
