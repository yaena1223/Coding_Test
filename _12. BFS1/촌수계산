import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class 촌수계산 {

	static ArrayList<ArrayList<Integer>>Graphlist;
	static Queue<Integer> queue = new LinkedList();
	static boolean visit [] ;
	static int dist[];
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st ;
		int n = Integer.parseInt(br.readLine());
		visit = new boolean[n+1];
		dist = new int[n+1];
		Graphlist = new ArrayList<ArrayList<Integer>>();
		for(int i = 0;i<=n;i++) {
			Graphlist.add(new ArrayList<Integer>());
		}
		Arrays.fill(dist, 0);
		st = new StringTokenizer(br.readLine());
		int p1 = Integer.parseInt(st.nextToken());
		int p2 = Integer.parseInt(st.nextToken());
		
		int m = Integer.parseInt(br.readLine());
		
		for(int i = 1;i<=m;i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());
			Graphlist.get(x).add(y);
			Graphlist.get(y).add(x);
		}
		
		queue.offer(p1);
		visit[p1] = true;
		while(!queue.isEmpty()) {
			int a = queue.poll();
			for(int i : Graphlist.get(a)) {
				if(!visit[i]) {
					queue.offer(i);
					dist[i]= dist[a]+1;
					visit[i] = true;
				}
			}
		}
		if(dist[p2]==0) {
			System.out.println(-1);
		}
		else System.out.println(dist[p2]);
	}

}
