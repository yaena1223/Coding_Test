import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.StringTokenizer;

public class _9_이분그래프 {
	static int visited[];
	static boolean ans;
	static ArrayList<ArrayList<Integer>> GraphList;
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		GraphList = new ArrayList<ArrayList<Integer>>();
		st = new StringTokenizer(br.readLine());
		int v = Integer.parseInt(st.nextToken());
		int e = Integer.parseInt(st.nextToken());
		visited = new int[v+1];
		for(int i = 0;i<=v;i++) {
			GraphList.add(new ArrayList<Integer>());
		}
		for(int i = 0;i<e;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			GraphList.get(a).add(b);
			GraphList.get(b).add(a);
		}
		Arrays.fill(visited, 0);
		
		
		ans = true;
		dfs(1,1);
		if(ans)System.out.println("YES");
		else System.out.println("NO");
		
	}
	static void dfs(int x, int c) {
		visited[x] = c;
		for(int y:GraphList.get(x)) {
			int c2;
			if(c==1) c2 =2;
			else c2 =1;
			if(visited[y]==0) dfs(y,c2);
			if(visited[y]==c) ans = false;
		}

	}

}
