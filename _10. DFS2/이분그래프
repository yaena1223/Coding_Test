import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class 이분그래프 {

	static ArrayList<ArrayList<Integer>> Graphlist;
	static int color[];
	static boolean pos = true;
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		st = new StringTokenizer(br.readLine());
		int v = Integer.parseInt(st.nextToken());
		int e = Integer.parseInt(st.nextToken());
		Graphlist= new ArrayList<ArrayList<Integer>>();
		for(int i = 0;i<=v;i++) {
			Graphlist.add(new ArrayList<Integer>());
		}
		for(int i = 0;i<e;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			Graphlist.get(a).add(b);
			Graphlist.get(b).add(a);
		}
		color = new int[v+1];
		for(int i = 1;i<=v;i++) {
			if(color[i]==0) dfs(i,1);
		}
		if(pos)System.out.println("YES");
		else System.out.println("NO");
	}

	static void dfs(int x, int c) {
		color[x] = c;
		for(int i : Graphlist.get(x)) {
			if (color[i]==color[x]) pos=false;
			else if(color[i]==0) {
				dfs(i,3-c);
			}
		}
	}
}
