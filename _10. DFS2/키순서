import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class 키순서 {

	static ArrayList<ArrayList<Integer>>Graphlist1,Graphlist2;
	static boolean visited[];
	static int cnt;
	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st ;
		Graphlist1 = new ArrayList<ArrayList<Integer>>();
		Graphlist2 = new ArrayList<ArrayList<Integer>>();
		st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		
		for(int i = 0;i<=n;i++) {
			Graphlist1.add(new ArrayList<Integer>());
			Graphlist2.add(new ArrayList<Integer>());
		}
		for(int i = 0;i<m;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			Graphlist1.get(a).add(b);
			Graphlist2.get(b).add(a);
		}
		int ans = 0;
		for(int i = 1;i<=n;i++) {
			visited = new boolean[n+1];
			cnt = 0;
			dfs(i,Graphlist1);
			dfs(i,Graphlist2);
			if(cnt == n) ans++;
		}
		
		System.out.println(ans);
	}
	static void dfs(int x, ArrayList<ArrayList<Integer>> list) {
		if(visited[x]==false) {
			cnt++;
		}
		visited[x]= true;
		for(int i : list.get(x)) {
			if (visited[i]==false)
				dfs(i,list);
		}
	}

}
