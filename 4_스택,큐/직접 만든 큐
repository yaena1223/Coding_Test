import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.Queue;
import java.util.LinkedList;

public class 직접만든큐 {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st;
		Queue<Integer> queue = new LinkedList<>();
		int n = Integer.parseInt(br.readLine());
		int back = 0;
		for(int i = 0 ;i<n;i++) {
			st = new StringTokenizer(br.readLine());
			String s = st.nextToken();
			
			if(s.equals("push")) {
				int a = Integer.parseInt(st.nextToken());
				queue.add(a);
				back = a;
			}
			
			else if(s.equals("size")) {
				sb.append(queue.size()+"\n");}
			
			else if(s.equals("pop")) {
				if(queue.size()==0) sb.append("-1\n");
				else {
					int x = queue.poll();
					sb.append(x+"\n");
				}
			}
			else if(s.equals("empty")) {
				if(queue.isEmpty())sb.append(1+"\n");
				else sb.append(0+"\n");
			}
			else if(s.equals("front")) {
				if(queue.isEmpty()) sb.append(-1+"\n");
				else {
					int x = queue.peek();
					sb.append(x+"\n");
				}
			}
			else if(s.equals("back")) {
				if(queue.isEmpty()) sb.append(-1+"\n");
				else sb.append(back+"\n");
	         }
			
			
		}
		System.out.println(sb.toString());
	}

}
