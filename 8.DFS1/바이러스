import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class 바이러스 {
	static boolean visited[] ;
	static ArrayList<ArrayList<Integer>>Graphlist ;
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		Graphlist= new ArrayList<ArrayList<Integer>>();
		int n = Integer.parseInt(br.readLine());
		int p = Integer.parseInt(br.readLine());
		for(int i = 0 ;i<=n;i++) {
			Graphlist.add(new ArrayList<Integer>());
		}
		for(int i = 0 ;i<p;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			Graphlist.get(a).add(b);
			Graphlist.get(b).add(a);
		}
		visited = new boolean[n+1];
		dfs(1);
		int ans = 0;
		for(int i = 2;i<=n;i++) {
			if(visited[i]) ans++;
		}
		System.out.println(ans);
	}
	
	public static void dfs(int x) {
		visited[x] = true;
		for(int y : Graphlist.get(x)) {
			if (visited[y]== false) dfs(y);
		}
	}

}
