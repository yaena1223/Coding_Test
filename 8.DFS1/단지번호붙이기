import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.StringTokenizer;

public class _8_단지번호붙이기 {
	static boolean visited[][] ;
	static int[][] array;
	static int cnt;
	static int dx[]= {1,-1,0,0};
	static 	int dy[] = {0,0,1,-1};
	static int n;
	static ArrayList<Integer> ans= new ArrayList<Integer>();
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		n = Integer.parseInt(br.readLine());
		array = new int[n][n];
		visited= new boolean[n][n];
		for(int i = 0;i<n;i++) {
			String s = br.readLine();
			for(int j = 0;j<n;j++) {
				array[i][j] = Integer.parseInt(s.substring(j, j+1));
			
			}
		}
		
	
	
		for(int i = 0;i<n;i++) {
			for(int j = 0;j<n;j++) {
				if(array[i][j]==1 && visited[i][j]==false) {
					cnt = 0;
					dfs(i,j);
					ans.add(cnt);
				}
			}
		}
		
		Collections.sort(ans);
		System.out.println(ans.size());
		for(int i = 0;i<ans.size();i++) {
			System.out.println(ans.get(i));
		}
	}
	static void dfs(int x,int y) {
		visited[x][y] = true;
		cnt++;
		for(int i = 0;i<4;i++) {
			int new_x = x+dx[i];
			int new_y = y+dy[i];
			if (new_x<0 || new_x>=n || new_y<0 || new_y>=n) continue;
			if(visited[new_x][new_y]==false && array[new_x][new_y]==1) dfs(new_x,new_y);
		}
	}
}
